Mary is a teacher in a middle school and she has a table seat storing students' names and their corresponding seat ids.

The column id is continuous increment.
Mary wants to change seats for the adjacent students.
Can you write a SQL query to output the result for Mary?
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Abbot   |
|    2    | Doris   |
|    3    | Emerson |
|    4    | Green   |
|    5    | Jeames  |
+---------+---------+
For the sample input, the output is:
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Doris   |
|    2    | Abbot   |
|    3    | Green   |
|    4    | Emerson |
|    5    | Jeames  |
+---------+---------+
Note:
If the number of students is odd, there is no need to change the last one's seat.

# method 1
select (case 
            when mod(id,2) != 0 and id != counts then id + 1
            when mod(id,2) != 0 and id = counts then id                   # IN Sql, the equal sing is "=", not "=="
            else id - 1
       end) as id, student
from seat, (select count(*) as counts from seat) as noth
order by id asc;

# method 2
select a.id, case when b.student is not null then b.student else a.student end as student
from seat as a left join seat as b
on a.id = (case
                when b.id %2 = 0 then b.id -1
                when b.id %2 != 0 then b.id + 1
          end)
order by a.id asc;

# With some bugs version:
select a.id, b.student as student
from seat as a left join seat as b
on a.id = (case
                when b.id %2 = 0 then b.id -1
                when b.id %2 != 0 then b.id + 1
          end) as b.id
order by a.id asc;
